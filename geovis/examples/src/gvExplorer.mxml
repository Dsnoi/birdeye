<?xml version="1.0" encoding="utf-8"?>
<!--
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 -->
 
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:ui="ui.*"
	xmlns:flexlib="http://code.google.com/p/flexlib/" 
	xmlns:geomap="org.un.cava.birdeye.geovis.views.maps.usa.*"
	xmlns:features="org.un.cava.birdeye.geovis.features.*"
	xmlns:symbols="org.un.cava.birdeye.geovis.symbols.*"
	xmlns:flows="org.un.cava.birdeye.geovis.analysis.*"
	xmlns:sparks="org.un.cava.birdeye.qavis.sparklines.*"
	backgroundGradientColors="[#333333,#999999]" layout="vertical"
	width="100%" height="100%" applicationComplete="init()" >

<mx:Script>
	<![CDATA[
		import org.un.cava.birdeye.geovis.symbols.Symbols;
		import org.un.cava.birdeye.geovis.analysis.Flow;
		import mx.events.StateChangeEvent;
		import mx.events.FlexEvent;
		import mx.events.ChildExistenceChangedEvent;
		import mx.events.ListEvent;
		import mx.controls.Alert;
		import mx.collections.ArrayCollection;

		import org.un.cava.birdeye.geovis.views.maps.usa.*
		import org.un.cava.birdeye.geovis.views.maps.world.*
		import org.un.cava.birdeye.geovis.features.*
		import org.un.cava.birdeye.qavis.sparklines.*
		 
		private var XMLLoader:URLLoader;
		private var XMLFile:String;
		[Bindable] 
		public var Maps:XML;
		[Bindable] 
        private var arrProjWorld:Array = new Array("Geographic", "Mollweide", "WinkelTripel", "Miller cylindrical","EckertIV","EckertVI","Goode","Robinson","Sinsoidal","Lambert equal area" );
 		[Bindable]
        private var arrProjUSA:Array = new Array("Geographic");
 		[Bindable]
 		private var ArrWorld:Array=
 			[{label:"World", data:"World"},
            {label:"Africa", data:"Africa"},
            {label:"-- North", data:"North"},
            {label:"-- Sub-Saharan", data:"Sub-Sahara"},
            {label:"Asia", data:"Asia"},
            {label:"-- Eastern", data:"Eastern"},
            {label:"-- Southern", data:"Southern"},
            {label:"-- South-eastern", data:"South-eastern"},
            {label:"-- Western", data:"Western"},
            {label:"CIS", data:"CIS"},
            {label:"Europe", data:"Europe"},
            {label:"North America", data:"NorthAmerica"},
            {label:"-- USA (States)", data:"USStates"},
            {label:"Oceania", data:"Oceania"},
            {label:"South America", data:"SouthAmerica"}];
 
 		[Bindable]
 		private var ArrUSA:Array= 
            [{label:"All States", data:"USStates"},
            {label:"OCONUS", data:"OCONUS"},
            {label:"CONUS", data:"CONUS"},
            {label:"Northeast", data:"Northeast"},
            {label:"-- New England", data:"NewEngland"},
            {label:"-- Middle Atlantic", data:"MiddleAtlantic"},
            {label:"Midwest", data:"MidWest"},
            {label:"-- East North Central", data:"EastNorthCentral"},
            {label:"-- West North Central", data:"WestNorthCentral"},
            {label:"South", data:"South"},
            {label:"-- South Atlantic", data:"SouthAtlantic"},
            {label:"-- East South Central", data:"EastSouthCentral"},
            {label:"-- West South Central", data:"WestSouthCentral"},
            {label:"West", data:"West"},
            {label:"-- Mountain", data:"Mountain"},
            {label:"-- Pacific", data:"Pacific"}];
        
        [Bindable] 
        private var arrColorByUSA:Array = new Array("Populations", "Housing", "Households");
 		[Bindable] 
        private var arrColorByWorld:Array = new Array("Populations", "Area", "Density");
 		    
 		private var myMap:Object;
		
		public function init():void{
			projectionSelector.dataProvider=arrProjUSA;
			projectionSelector.selectedIndex=0;
			featureSelector.dataProvider=arrColorByUSA;
			featureSelector.selectedIndex=0;
	  		layoutSelector.dataProvider=ArrUSA;
	  		layoutSelector.selectedIndex=0;
	  		zoomSelector.dataProvider=ArrUSA;
	  		symbolTypeSelector.selectedIndex=1;
			XMLLoader=new URLLoader();
			XMLFile="data/usstates.xml";
			XMLLoader.addEventListener(Event.COMPLETE, loadXML); 
			XMLLoader.load(new URLRequest(XMLFile));	
			progressBar.visible=true;
  		}
  		
  		public function loadXML(e:Event):void{
			Maps=new XML(e.target.data);
			createMap();
			colorize();
			//createFlows();
			createPies();
		}
		
		private function layout_Selected(e:ListEvent):void{
			if(projectionSelector.selectedIndex>=0){
				showMap();
			}	
		}
		
		private function projection_Selected(e:ListEvent):void{
			if(layoutSelector.selectedIndex>=0){
				showMap();
			}
		}
		
		private function symbolsSel(e:ListEvent):void{
			if(e.currentTarget.selectedIndex==1){
				myMap.removeAllChildren();
				createMap();
				colorize();
				createPies();
			}else if(e.currentTarget.selectedIndex==2){
				myMap.removeAllChildren();
				createMap();
				colorize();
				createFlows();
			}
		}
		private function showMap():void{
			progressBar.visible=true;
			mapCnvs.addEventListener(FlexEvent.UPDATE_COMPLETE, createNewMap);
			mapCnvs.removeChild(mapCnvs.getChildByName("map"));
		}
		private function createNewMap(event:FlexEvent):void{
			createMap()
		}
		
		private function createMap():void{
			if (layoutSelector.selectedLabel=="World"){
				myMap=new WorldMap();
			}else if (layoutSelector.selectedLabel=="Africa"){
				myMap=new AfricaMap();
			}else if (layoutSelector.selectedLabel=="-- USA (States)" || layoutSelector.selectedLabel=="All States"){
				myMap=new USStates();
			}else if (layoutSelector.selectedLabel=="North America"){
				myMap=new NorthAmericaMap();
			}else if (layoutSelector.selectedLabel=="South America"){
				myMap=new SouthAmericaMap();
			}else if (layoutSelector.selectedLabel=="Asia"){
				myMap=new AsiaMap();
			}else if (layoutSelector.selectedLabel=="Oceania"){
				myMap=new OceaniaMap();
			}else if (layoutSelector.selectedLabel=="Europe"){
				myMap=new EuropeMap();
			}else if (layoutSelector.selectedLabel=="CIS"){
				myMap=new CISMap();
			}else if (layoutSelector.selectedLabel=="-- North"){
				myMap=new NorthAfricaMap();
			}else if (layoutSelector.selectedLabel=="-- Sub-Saharan"){
				myMap=new SubSaharaMap();
			}else if (layoutSelector.selectedLabel=="-- Eastern"){
				myMap=new EasternMap();
			}else if (layoutSelector.selectedLabel=="-- Southern"){
				myMap=new SouthernMap();
			}else if (layoutSelector.selectedLabel=="-- South-eastern"){
				myMap=new SouthEasternMap();
			}else if (layoutSelector.selectedLabel=="-- Western"){
				myMap=new WesternMap();
			}else if (layoutSelector.selectedLabel=="OCONUS"){
				myMap=new OconusMap();
			}else if (layoutSelector.selectedLabel=="CONUS"){
				myMap=new ConusMap();
			}else if (layoutSelector.selectedLabel=="Northeast"){
				myMap=new NortheastMap();
			}else if (layoutSelector.selectedLabel=="-- New England"){
				myMap=new NewEnglandMap();
			}else if (layoutSelector.selectedLabel=="-- Middle Atlantic"){
				myMap=new MiddleAtlanticMap();
			}else if (layoutSelector.selectedLabel=="MidWest"){
				myMap=new MidwestMap();
			}else if (layoutSelector.selectedLabel=="-- East North Central"){
				myMap=new EastNorthCentralMap();
			}else if (layoutSelector.selectedLabel=="-- West North Central"){
				myMap=new WestNorthCentralMap();
			}else if (layoutSelector.selectedLabel=="South"){
				myMap=new SouthMap();
			}else if (layoutSelector.selectedLabel=="-- South Atlantic"){
				myMap=new SouthAtlanticMap();
			}else if (layoutSelector.selectedLabel=="-- East South Central"){
				myMap=new EastSouthCentralMap();
			}else if (layoutSelector.selectedLabel=="-- West South Central"){
				myMap=new WestSouthCentralMap();
			}else if (layoutSelector.selectedLabel=="West"){
				myMap=new WestMap();
			}else if (layoutSelector.selectedLabel=="-- Mountain"){
				myMap=new MountainMap();
			}else if (layoutSelector.selectedLabel=="-- Pacific"){
				myMap=new PacificMap();
			}
			
			myMap.name="map";
			myMap.id="map";
			myMap.projection=projectionSelector.selectedLabel;
			myMap.x="10"; 
			myMap.y="100"; 
			myMap.scaleX=zoomer.value; 
			myMap.scaleY=zoomer.value; 
			mapCnvs.removeEventListener(FlexEvent.UPDATE_COMPLETE, createNewMap);
			progressBar.visible=false;
			mapCnvs.addChild((myMap as Canvas));
			if(rbWorld.selected){	
				lblTitle.text="World Map " + layoutSelector.selectedLabel + " (" + projectionSelector.selectedLabel + ")";
			}else{
				lblTitle.text="USA Map " + layoutSelector.selectedLabel + " (" + projectionSelector.selectedLabel + ")";
			}
		}
		
		private function colorize():void{
			var states:XMLList=Maps.states.state;
			for each (var statesElement:XML in states) {
				var ft:Features=new Features();
				ft.foid=statesElement.@id;
				ft.toolTip=statesElement.@name;
				if(statesElement.@population<1000000){
					ft.setStyle("fillItem","0xedf8e9")
				}else if(statesElement.@population>=1000000 && statesElement.@population<5000000){
					ft.setStyle("fillItem","0xbae4b3")
				}else if(statesElement.@population>=5000000 && statesElement.@population<10000000){
					ft.setStyle("fillItem","0x74c476")
				}else if(statesElement.@population>=1500000){
					ft.setStyle("fillItem","0x6d2c")
				}
				myMap.addChild(ft);
			}
		}
		
		private function createFlows():void{
			var flows:XMLList=Maps.flows;
			var fw:Flow=new Flow();
			fw.showDataTips=true;
			fw.dataProvider=flows;
			fw.fromField="@fromKey";
			fw.toField="@toKey";
			fw.valueField="@description";
			
			myMap.addChild(fw);
		}
		
		private function createPies():void{
			var SymbList:XMLList=Maps.symbols.symbol
			trace(SymbList)
			for each (var symbolsElement:XML in SymbList) {
				var sym:Symbols=new Symbols();
				sym.key=symbolsElement.@id;
				var pie:PieSpark=new PieSpark();
				pie.width=125;
				pie.height=125;
				pie.dataProvider=symbolsElement;
				pie.dataField="@unit";
				pie.gradientColors=gradColors; 
				pie.showDataTips=true;
				sym.addChild(pie);
				myMap.addChild(sym);
			}
		}
		
		private function changeSize():void{
			/* if((myMap as Canvas)==null){
			 	map.scaleX=zoomer.value;
			 	map.scaleY=zoomer.value;
			 }else{*/
			 	(myMap as Canvas).scaleX=zoomer.value;
			 	(myMap as Canvas).scaleY=zoomer.value;
			// }
	  	}
	  	
	  	private function baseMapSel(e:Event):void{
	  		if(e.currentTarget.id=='rbWorld'){
	  			projectionSelector.dataProvider=arrProjWorld;
	  			layoutSelector.dataProvider=ArrWorld;
	  			zoomSelector.dataProvider=ArrWorld;
	  			featureSelector.dataProvider=arrColorByWorld;
	  		}else{
	  			projectionSelector.dataProvider=arrProjUSA;
	  			layoutSelector.dataProvider=ArrUSA;
	  			zoomSelector.dataProvider=ArrUSA;
	  			featureSelector.dataProvider=arrColorByUSA;
	  		}
	  	}
			    
	    	[Bindable] 
	    	private var sales1:ArrayCollection = new ArrayCollection( [
	            { media: "CD", unit1: 1000000, unit2: 600000, unit3: 40000, unit4: 200000 },
	            { media: "Ringtones", unit1: 500000, unit2: 1000000, unit3: 800000, unit4: 30000},
	            { media: "MP3", unit1: 2000000, unit2: 1500000, unit3: 800000, unit4: 200000 },
	            { media: "Tapes", unit1: 750000, unit2: 200000, unit3: 1500000, unit4: 900000 } ]);
            [Bindable] 
			private var gradColors:Array = [
				[0x6959cd, 0x473c8b],
				[0x3a5fcd, 0x27408b],
				[0xffff00, 0xffd700],
				[0xcd2626, 0x8b1a1a],
				[0xcd1076, 0x8b0a50],
				[0x7d26cd, 0x551a8b]];

			[Bindable]
        public var myData:XML=
            <root>
                <sales media="CD" unit1="1000000" unit2="600000" unit3="40000" unit4="200000"/>
                <sales media="Ringtones" unit1="500000" unit2="1000000" unit3="800000" unit4="30000"/>
                <sales media="MP3" unit1="2000000" unit2="1500000" unit3="800000" unit4="200000"/>
                <sales media="Tapes" unit1="750000" unit2="200000" unit3="1500000" unit4="900000"/>
            </root>;
            
            [Bindable]
        public var myFlowData:XML=
            <flows>
                <flow fromKey="AK" toKey="ID" description="Hello" />
                <flow fromKey="LA" toKey="NY" description="GoodBye" />
            </flows>;

	]]>
</mx:Script>
<mx:Style source="styles/main.css" />
	
<!-- Effects -->
	<mx:WipeLeft id="wipeLeft" duration="1000" />
	<mx:WipeRight id="wipeRight" duration="1000" />
	
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
		
	<mx:VBox width="1024" height="100%" verticalGap="10" >
	<mx:ApplicationControlBar width="100%" height="85" >
		<mx:HBox width="100%" verticalAlign="middle" paddingLeft="5" paddingRight="5" >
			<mx:Image source="assets/icons/BirdEyeLogoGeoVis75.png" />
			<mx:Label text="BIRDEYE: GeoVis Explorer" color="#FFFFFF" fontSize="16" />
			</mx:HBox>
	</mx:ApplicationControlBar>	
	
	<mx:HBox id="DivNavRB" width="100%" height="100%" paddingBottom="5" horizontalGap="5">
		<mx:HBox id="sideBar" width="300" height="100%" horizontalGap="0" >
			<ui:Grip id="navGrip" 
				width="17" height="100%" horizontalAlign="center"
				gripTip="Show/Hide Control Panel" />
			<mx:VBox id="NavContainerRB" horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalAlign="middle" horizontalAlign="center" verticalGap="1" horizontalGap="0" width="100%" height="100%" hideEffect="{wipeLeft}" showEffect="{wipeRight}">
				<mx:Accordion id="leftAccordion" paddingBottom="5" paddingRight="5" paddingTop="5" paddingLeft="5" width="100%" height="100%" creationPolicy="all" >
					<mx:Canvas id="visibilitycnvs" label="Controls" height="100%" width="100%" paddingBottom="5" >
						<mx:VBox width="100%" horizontalAlign="center">
							<mx:Spacer height="3" />
								
							<!-- Controls -->
							<flexlib:WindowShade id="controlsCnvs" styleName="linkButtonWindowShade" 
      							label="Zoom" width="100%" opened="false" horizontalAlign="center" paddingBottom="5" >
							<mx:VBox width="97%" horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							<mx:ComboBox id="zoomSelector" prompt="Select zoom focus..." width="95%" toolTip="Some layouts are under construction" >
									
								</mx:ComboBox>
								<mx:HBox width="100%" >
								<mx:Label text="Scale:" />
								<mx:HSlider id="zoomer" value="0.9" minimum="0.8" maximum="2" change="changeSize()" allowTrackClick="true"  />
								</mx:HBox>
								<mx:HBox width="100%" >
								<mx:Label text="Nearest Neighbor"  />
								<mx:HSlider id="nearestNeighbor" tickInterval="1" snapInterval="1" value="2" minimum="1" maximum="3"  allowTrackClick="true" />
								</mx:HBox>
							</mx:VBox>
							</flexlib:WindowShade>
								
							<!-- Map and Layout Parameters -->
							<flexlib:WindowShade id="layoutCnvs" styleName="linkButtonWindowShade" 
      							label="Layout" width="100%" opened="true" horizontalAlign="center" paddingBottom="5" >
							<mx:VBox width="97%" horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							<mx:HBox width="100%" >
								<mx:Label text="Base Map:" />
								<mx:RadioButtonGroup id="rbgBaseMap" labelPlacement="right" />
									<mx:RadioButton groupName="baseMap" id="rbWorld" value="World" 
            							label="World" change="baseMapSel(event)"/>
        							<mx:RadioButton groupName="baseMap" id="rbUSA" value="USA" 
            							label="USA" selected="true" change="baseMapSel(event)" />
        					</mx:HBox>
							<mx:ComboBox id="layoutSelector" prompt="Select map..." width="95%" toolTip="Select region" change="layout_Selected(event)" >
							</mx:ComboBox>
							
							<mx:ComboBox id="projectionSelector" prompt="Select projection..." width="95%" toolTip="Set projection" change="projection_Selected(event)" >
								
							</mx:ComboBox>	
				
							</mx:VBox>
							</flexlib:WindowShade>
							
							<!-- Features Styles -->
							<flexlib:WindowShade id="featuresCnvs" styleName="linkButtonWindowShade" 
      							label="Features" width="100%" opened="true" horizontalAlign="center" paddingBottom="5" >
							<mx:VBox width="97%" horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							<mx:ComboBox id="featureSelector" height="20" width="95%" prompt="Color by..." toolTip="Select the orientation of tree layout" />
							<mx:ComboBox id="colorBrewerSelector" height="20" width="95%" prompt="Color scheme..." toolTip="Select the orientation of tree layout" >
									<mx:ArrayCollection>
										<mx:String>Sequential</mx:String>
										<mx:String>Qualitative</mx:String>
										<mx:String>Diverging</mx:String>
									</mx:ArrayCollection>
							</mx:ComboBox>
							<mx:CheckBox label="Color Range Control" />	
							</mx:VBox>
							</flexlib:WindowShade>
							
							<!-- Symbols Styles -->
							<flexlib:WindowShade id="symbolsCnvs" styleName="linkButtonWindowShade" 
      							label="Symbols" width="100%" opened="true" horizontalAlign="center" paddingBottom="5" >
							<mx:VBox width="97%" horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							<mx:ComboBox id="symbolTypeSelector" height="20" width="95%" prompt="Add Symbols..." toolTip="Select the type of symbols" change="symbolsSel(event)" >
									<mx:ArrayCollection>
										<mx:String>Bubble</mx:String>
										<mx:String>Chart</mx:String>
										<mx:String>Flow</mx:String>
										<mx:String>Glyph</mx:String>
									</mx:ArrayCollection>
							</mx:ComboBox>	
							<mx:ComboBox id="symbolFieldSelector" height="20" width="95%" prompt="Based on..." toolTip="Select the orientation of tree layout" >
									<mx:ArrayCollection>
										<mx:String>X</mx:String>
										<mx:String>Y</mx:String>
										<mx:String>Z</mx:String>
									</mx:ArrayCollection>
							</mx:ComboBox>	
							</mx:VBox>
							</flexlib:WindowShade>
							
							<!-- Surrounds Styles -->
							<flexlib:WindowShade id="surroundsCnvs" styleName="linkButtonWindowShade" 
      							label="Surrounds" width="100%" opened="false" horizontalAlign="center" paddingBottom="5" >
							<mx:HBox width="97%" horizontalAlign="left" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							<mx:CheckBox label="Title" />
							<mx:CheckBox label="Legend" />
							<mx:CheckBox label="Grid" />
							<mx:CheckBox label="Scale" />
							</mx:HBox>
							</flexlib:WindowShade>
							
							<!-- View Controls -->
							<flexlib:WindowShade id="viewCnvs" styleName="linkButtonWindowShade" 
      							label="View" width="100%" opened="false" horizontalAlign="center" paddingBottom="5" >
							<mx:VBox width="97%" horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							
							<mx:HBox width="100%" >
								<mx:Label text="Perspective" />
								<mx:RadioButtonGroup id="perspective" labelPlacement="right" />
									<mx:RadioButton groupName="perspective" id="twod" value="twod" 
            							label="2D" selected="true" />
        							<mx:RadioButton groupName="perspective" id="plane" value="plane" 
            							label="3D Plane" />
        							<mx:RadioButton groupName="perspective" id="sphere" value="sphere" 
            							label="3D Sphere" />
							</mx:HBox>
							<mx:HBox width="100%" >
								<mx:Label text="Pan" />
								<mx:HSlider  />
							</mx:HBox>
							<mx:HBox width="100%" >
								<mx:Label text="Tilt" />
								<mx:HSlider  />
							</mx:HBox>
							</mx:VBox>
							</flexlib:WindowShade>
							
							<!-- Style Controls -->
							<flexlib:WindowShade id="styleCnvs" styleName="linkButtonWindowShade" 
      							label="Style" width="100%" opened="false" horizontalAlign="center" paddingBottom="5" >
							<mx:VBox width="97%" horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							<mx:ComboBox id="styleSelector" height="20" width="95%" prompt="Select style..." toolTip="Select the orientation of tree layout" >
									<mx:ArrayCollection>
										<mx:String>White Background</mx:String>
										<mx:String>Black Background</mx:String>
										<mx:String>Custom</mx:String>
									</mx:ArrayCollection>
							</mx:ComboBox>
							<mx:HBox horizontalAlign="left" >
							<mx:Label text="Stroke:" />
							<mx:ColorPicker />	
							<mx:Label text="Background:" />
							<mx:ColorPicker />
							</mx:HBox>
							</mx:VBox>
							</flexlib:WindowShade>
							
							<!-- Events and Effects -->
							<flexlib:WindowShade id="eventsCnvs" styleName="linkButtonWindowShade" 
      							label="Events and Effects" width="100%" opened="false" horizontalAlign="center" paddingBottom="5" >
							<mx:VBox width="97%" horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5" borderColor="#666666" borderThickness="1" cornerRadius="5" borderStyle="solid" backgroundColor="#FFFFFF" backgroundAlpha=".8" >
							<mx:ComboBox id="eventSelector" height="20" width="95%" prompt="Select event..." toolTip="Select the orientation of tree layout" >
									<mx:ArrayCollection>
										<mx:String>RollOver/Rollout</mx:String>
										<mx:String>itemClick</mx:String>
										<mx:String>Custom</mx:String>
									</mx:ArrayCollection>
							</mx:ComboBox>
							<mx:HBox horizontalAlign="left" >
							<mx:Label text="Stroke:" />
							<mx:ColorPicker />	
							<mx:Label text="Background:" />
							<mx:ColorPicker />
							</mx:HBox>
							</mx:VBox>
							</flexlib:WindowShade>
							<mx:Spacer height="100%" />
						</mx:VBox>		
					</mx:Canvas>
					<mx:Canvas id="searchcnvs" label="Search/Filter Nodes" height="100%" width="100%">
						<mx:VBox width="100%" height="100%" paddingLeft="5" paddingRight="5">
						</mx:VBox>
					</mx:Canvas>
					
									
				</mx:Accordion>
				
			</mx:VBox>		
		</mx:HBox>

		<!-- Map Panel-->
		<mx:Canvas id="mapCnvs" borderStyle="solid" borderColor="#CCCCCC" backgroundColor="#FFFFFF"  width="100%" height="100%" verticalScrollPolicy="off">		
			<mx:ProgressBar id="progressBar" x="{mapCnvs.width/2-progressBar.width/2}" y="{mapCnvs.height/2-vbDashbox.height}" indeterminate="true" visible="false"/>
			<mx:Label id="lblTitle" text="US States (Choropleth with Symbols)" y="20" fontSize="16" fontWeight="bold" horizontalCenter="0" />
			<!--<geomap:USStates id="map" name="map" projection="Geographic" x="15" y="100" scaleX="{zoomer.value}" scaleY="{zoomer.value}" >
				
			
				<features:Features foid="AK" fillItem="0xbae4b3" alpha="0.6" toolTip="ALASKA"/>
				<features:Features foid="AL" fillItem="0xedf8e9" alpha="0.6" toolTip="ALABAMA"/>
				<features:Features foid="AR" fillItem="0x74c476" alpha="0.6" toolTip="ARKANSAS"/>
				<features:Features foid="AZ" fillItem="0x6d2c" alpha="0.6" toolTip="ARIZONA"/>
				<features:Features foid="CA" fillItem="0xedf8e9" alpha="0.6" toolTip="CALIFORNIA"/>
				<features:Features foid="CO" fillItem="0xedf8e9" alpha="0.6" toolTip="COLORADO"/>
				<features:Features foid="CT" fillItem="0xedf8e9" alpha="0.6" toolTip="CONNECTICUT"/>
				<features:Features foid="DC" fillItem="0x74c476" alpha="0.6" toolTip="DISTRICT OF COLUMBIA"/>
				<features:Features foid="DE" fillItem="0xbae4b3" alpha="0.6" toolTip="DELAWARE"/>
				<features:Features foid="FL" fillItem="0x74c476" alpha="0.6" toolTip="FLORIDA"/>
				<features:Features foid="GA" fillItem="0x6d2c" alpha="0.6" toolTip="GEORGIA"/>
				<features:Features foid="HI" fillItem="0xedf8e9" alpha="0.6" toolTip="HAWAII"/>
				<features:Features foid="IA" fillItem="0x74c476" alpha="0.6" toolTip="IOWA"/>
				<features:Features foid="ID" fillItem="0xedf8e9" alpha="0.6" toolTip="IDAHO"/>
				<features:Features foid="IL" fillItem="0xbae4b3" alpha="0.6" toolTip="ILLINOIS"/>
				<features:Features foid="IN" fillItem="0x74c476" alpha="0.6" toolTip="INDIANA"/>
				<features:Features foid="KS" fillItem="0x6d2c" alpha="0.6" toolTip="KANSAS"/>
				<features:Features foid="KY" fillItem="0xedf8e9" alpha="0.6" toolTip="KENTUCKY"/>
				<features:Features foid="LA" fillItem="0xedf8e9" alpha="0.6" toolTip="LOUISIANA"/>
				<features:Features foid="MA" fillItem="0x6d2c" alpha="0.6" toolTip="MASSACHUSETTS"/>
				<features:Features foid="MD" fillItem="0x74c476" alpha="0.6" toolTip="MARYLAND"/>
				<features:Features foid="ME" fillItem="0x74c476" alpha="0.6" toolTip="MAINE"/>
				<features:Features foid="MI" fillItem="0xedf8e9" alpha="0.6" toolTip="MICHIGAN"/>
				<features:Features foid="MN" fillItem="0xedf8e9" alpha="0.6" toolTip="MINNESOTA"/>
				<features:Features foid="MO" fillItem="0x74c476" alpha="0.6" toolTip="MISSOURI"/>
				<features:Features foid="MS" fillItem="0xbae4b3" alpha="0.6" toolTip="MISSISSIPPI"/>
				<features:Features foid="MT" fillItem="0x74c476" alpha="0.6" toolTip="MONTANA"/>
				<features:Features foid="NC" fillItem="0x6d2c" alpha="0.6" toolTip="NORTH CAROLINA"/>
				<features:Features foid="ND" fillItem="0xedf8e9" alpha="0.6" toolTip="NORTH DAKOTA"/>
				<features:Features foid="NE" fillItem="0x6d2c" alpha="0.6" toolTip="NEBRASKA"/>
				<features:Features foid="NH" fillItem="0xedf8e9" alpha="0.6" toolTip="NEW HAMPSHIRE"/>
				<features:Features foid="NJ" fillItem="0xbae4b3" alpha="0.6" toolTip="NEW JERSEY"/>
				<features:Features foid="NM" fillItem="0x74c476" alpha="0.6" toolTip="NEW MEXICO"/>
				<features:Features foid="NV" fillItem="0xedf8e9" alpha="0.6" toolTip="NEVADA"/>
				<features:Features foid="NY" fillItem="0x74c476" alpha="0.6" toolTip="NEW YORK"/>
				<features:Features foid="OH" fillItem="0xedf8e9" alpha="0.6" toolTip="OHIO"/>
				<features:Features foid="OK" fillItem="0xbae4b3" alpha="0.6" toolTip="OKLAHOMA"/>
				<features:Features foid="OR" fillItem="0x74c476" alpha="0.6" toolTip="OREGON"/>
				<features:Features foid="PA" fillItem="0x74c476" alpha="0.6" toolTip="PENNSYLVANIA"/>
				<features:Features foid="RI" fillItem="0x6d2c" alpha="0.6" toolTip="RHODE ISLAND"/>
				<features:Features foid="SC" fillItem="0xedf8e9" alpha="0.6" toolTip="SOUTH CAROLINA"/>
				<features:Features foid="SD" fillItem="0xedf8e9" alpha="0.6" toolTip="SOUTH DAKOTA"/>
				<features:Features foid="TN" fillItem="0xbae4b3" alpha="0.6" toolTip="TENNESSEE"/>
				<features:Features foid="TX" fillItem="0x74c476" alpha="0.6" toolTip="TEXAS" rollOverEffect="{wipeLeft}" />
				<features:Features foid="UT" fillItem="0x74c476" alpha="0.6" toolTip="UTAH"/>
				<features:Features foid="VA" fillItem="0xbae4b3" alpha="0.6" toolTip="VIRGINIA "/>
				<features:Features foid="VT" fillItem="0x6d2c" alpha="0.6" toolTip="VERMONT"/>
				<features:Features foid="WA" fillItem="0x74c476" alpha="0.6" toolTip="WASHINGTON"/>
				<features:Features foid="WI" fillItem="0x6d2c" alpha="0.6" toolTip="WISCONSIN"/>
				<features:Features foid="WV" fillItem="0x74c476" alpha="0.6" toolTip="WEST VIRGINIA"/>
				<features:Features foid="WY" fillItem="0xedf8e9" alpha="0.6" toolTip="WYOMING"/>
 
			
			
			<symbols:Symbols key="PA">
					<sparks:PieSpark id="Pie1" width="125" height="125" dataProvider="{sales1}" dataField="unit1" gradientColors="{gradColors}" showDataTips="true"/>
			</symbols:Symbols>
			<symbols:Symbols key="IA">
					<sparks:PieSpark id="Pie2" width="125" height="125" dataProvider="{myData}" dataField="@unit2" gradientColors="{gradColors}" showDataTips="true" />
			</symbols:Symbols>
			<symbols:Symbols key="GA">
					<sparks:PieSpark id="Pie3" width="125" height="125" dataProvider="{sales1}" dataField="unit3" gradientColors="{gradColors}" showDataTips="true" />
			</symbols:Symbols>
			<symbols:Symbols key="NV">
					<sparks:PieSpark id="Pie4" width="125" height="125" dataProvider="{myData}" dataField="@unit4" gradientColors="{gradColors}" showDataTips="true" />
			</symbols:Symbols>
			<symbols:Symbols key="AK">
					<sparks:PieSpark id="Pie5" width="125" height="125" dataProvider="{sales1}" dataField="unit2" gradientColors="{gradColors}" showDataTips="true" />
			</symbols:Symbols>
			<symbols:Symbols key="IL">
					<sparks:BubbleSpark radius="17" styleName="redBubble" />
			</symbols:Symbols>
			<symbols:Symbols key="WY">
					<sparks:BubbleSpark radius="17" fill="0xFF00FF" alpha="0.8" ratio="1"/>
			</symbols:Symbols>
			
			<flows:Flow dataProvider="{myFlowData}" fromField="@fromKey" toField="@toKey" valueField="@description"/>
			
			</geomap:USStates>-->
			
			<!-- Dashboard -->
			<mx:VBox id="vbDashbox" width="100%" height="150" left="5" right="5" bottom="5" 
        	verticalAlign="top" horizontalAlign="center" horizontalScrollPolicy="off" verticalScrollPolicy="off">
        	<mx:HBox width="100%" height="100%" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5" 
        		cornerRadius="12" borderStyle="solid" borderThickness="2" borderColor="#CCCCCC" backgroundColor="#CCCCCC" backgroundAlpha="0.3"
        		horizontalAlign="center">
        	<mx:Label text="Dashboard" fontSize="11" fontWeight="bold"/>
            </mx:HBox>
        	</mx:VBox>
		</mx:Canvas>
	 <!--End of Graph Panel -->
	</mx:HBox>
</mx:VBox>
</mx:VBox>
	
	<mx:states>
       <mx:State name="showCntrlPanel">
			<mx:SetProperty target="{sideBar}" name="width" value="300" />
			<mx:SetStyle target="{DivNavRB}" name="horizontalGap" value="5" />
       </mx:State>        
		<mx:State name="hideCntrlPanel">
			<mx:SetProperty target="{sideBar}" name="width" value="17" />
			<mx:SetStyle target="{DivNavRB}" name="horizontalGap" value="0" />
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="*" toState="*">
			<mx:Resize target="{sideBar}" />
		</mx:Transition>
	</mx:transitions>


	
</mx:Application>