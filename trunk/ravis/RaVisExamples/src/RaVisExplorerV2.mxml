<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:vg="http://www.adobe.com/2006/fc"
	xmlns:un="org.un.cava.birdeye.ravis.graphLayout.visual.*"
	xmlns:ui="org.un.cava.birdeye.ravis.components.ui.*"
	xmlns:lc="org.un.cava.birdeye.ravis.components.ui.controls.layouterControls.*"
	xmlns:vc="org.un.cava.birdeye.ravis.components.ui.controls.vgraphControls.*"
	xmlns:dp="org.un.cava.birdeye.ravis.components.ui.dataPresentation.*"
	xmlns:flexlib="http://code.google.com/p/flexlib/"
	creationPolicy="all"
	creationComplete="init();" 
	width="100%"
	height="100%"
	backgroundGradientColors="[#333333,#999999]"
	viewSourceURL="srcview/index.html">

	<!-- mx:Style source="org/un/cava/birdeye/style/css/main.css" / -->
	
	<!-- Effects -->
	<mx:WipeLeft id="wipeLeft" duration="1000" />
	<mx:WipeRight id="wipeRight" duration="1000" />
	
	<mx:HBox id="DivNavRB" width="100%" height="100%" paddingBottom="5" horizontalGap="5">
		<mx:HBox id="sideBar" width="350" height="100%" horizontalGap="0" >
			<ui:Grip id="navGrip" 
				width="17" height="100%" horizontalAlign="center"
				gripTip="Show/Hide Control Panel" />
			<mx:VBox id="NavContainerRB" horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalAlign="middle" horizontalAlign="center" verticalGap="1" horizontalGap="0" width="100%" height="100%" hideEffect="{wipeLeft}" showEffect="{wipeRight}">
				<ui:DefaultVGAccordion id="myControlAccPanel" />
			</mx:VBox>		
		</mx:HBox>

		<!-- Graph Panel -->
		<mx:Canvas id="graphCnvs" borderStyle="solid" borderColor="#CCCCCC" width="100%" height="100%"  >		
			<un:VisualGraph id="vgraph" width="100%" height="100%" 
				paddingBottom="5" left="0" right="0" top="0" bottom="0" backgroundColor="#FFFFFF" alpha="1"
				resize="GlobalControls.redrawGraphLL()"
				visibilityLimitActive="true"
				>
			</un:VisualGraph>
			
		</mx:Canvas>
		<!-- End of Graph Panel -->
	</mx:HBox>
	
	<mx:states>
       <mx:State name="showCntrlPanel">
			<mx:SetProperty target="{sideBar}" name="width" value="350" />
			<mx:SetStyle target="{DivNavRB}" name="horizontalGap" value="5" />
       </mx:State>        
		<mx:State name="hideCntrlPanel">
			<mx:SetProperty target="{sideBar}" name="width" value="17" />
			<mx:SetStyle target="{DivNavRB}" name="horizontalGap" value="0" />
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="*" toState="*">
			<mx:Resize target="{sideBar}" />
		</mx:Transition>
	</mx:transitions>

	<mx:XML id="xmldata" source="../data/graph.xml" />
	
	<mx:Script>
		<![CDATA[
			import org.un.cava.birdeye.ravis.graphLayout.data.Graph;
			import org.un.cava.birdeye.ravis.globals.GlobalParams;
			import org.un.cava.birdeye.ravis.globals.GlobalParamsData;
			import org.un.cava.birdeye.ravis.globals.GlobalParamsLayout;
			import org.un.cava.birdeye.ravis.globals.GlobalParamsVGraph;
			import org.un.cava.birdeye.ravis.globals.GlobalLayoutControls;
			import org.un.cava.birdeye.ravis.globals.GlobalControls;
			import org.un.cava.birdeye.ravis.components.ui.controls.vgraphControls.NodeRendererSelector;
			import org.un.cava.birdeye.ravis.components.ui.controls.vgraphControls.EdgeRendererSelector;
			import org.un.cava.birdeye.ravis.components.ui.controls.vgraphControls.DegreesOfSeparation;
			import org.un.cava.birdeye.ravis.components.ui.VGAccordion;
			import org.un.cava.birdeye.ravis.components.ui.dataPresentation.SeachFilterGrid;
							
			/* Init function, initiates the HTTP
			 * request. All further initalisation is done
			 * in the event handler for the HTTP Service */
			private function init():void {
				initData();
				myControlAccPanel.selectPane(VGAccordion.INDEX_VIS_LAYOUT);
			}
			
			/**
			 * event handler for HTTPService, does all the remaining required
			 * initialisation */
			private function initData():void {
				GlobalParams.xmlData = xmldata;
				
				(myControlAccPanel.searchFilterComp as SeachFilterGrid).initDataGrid(xmldata.elements);
				
				
				/* init a graph object with the XML data */
				vgraph.graph = new Graph("XMLAsDocsGraph",false,xmldata,GlobalParams.xmlNames);

				GlobalParams.vgraph = vgraph;

				/* assign start root */
				vgraph.currentRootVNode = vgraph.graph.nodeByStringId("1").vnode;

				//GlobalParamsLayout.currentLayouterName = "Hierarchical";
				//GlobalLayoutControls.applyLayouter();
				
				if(GlobalParamsLayout.layoutSelectorControl != null) {
					GlobalParamsLayout.layoutSelectorControl.selectedItem = "Hierarchical";
					GlobalParamsLayout.layoutSelectorControl.changeLayouter();
				}
				
				if(GlobalParamsLayout.hierLayoutControls != null) {
					GlobalParamsLayout.hierLayoutControls.applyValues();
				}
				
				if(GlobalParamsLayout.commonLayoutControls != null) {
					GlobalParamsLayout.commonLayoutControls.applyValues();
				}
				
				/* apply the values of the control objects */
				if(GlobalParamsVGraph.nodeRendererSelectorControl != null) {
					GlobalParamsVGraph.nodeRendererSelectorControl.selectedItem = "Default";
					GlobalParamsVGraph.nodeRendererSelectorControl.changeNodeRenderer();
				}
			
				if(GlobalParamsVGraph.edgeRendererSelectorControl != null) {
					GlobalParamsVGraph.edgeRendererSelectorControl.selectedItem = "Default";
					GlobalParamsVGraph.edgeRendererSelectorControl.changeEdgeRenderer();
				}
			
				if(GlobalParamsVGraph.degreeOfSeparationControl != null) {
					GlobalParamsVGraph.degreeOfSeparationControl.updateMaxVisDist();
				}
				
				/* ready to go */
				GlobalParams.vgraphInitOk = true;
				
				/* the following kicks it off .... */
				vgraph.draw();
			}
		]]>
	</mx:Script>					
</mx:Application>
