<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
-->
<mx:CheckBox
	xmlns:mx="http://www.adobe.com/2006/mxml"
	selected="true"
	label="Damping"
	toolTip="Enable/Disable damping"
	initialize="registerWithGlobal()"
	click="toggleDamping()" >
	
	
	<mx:Script>
		<![CDATA[
			
			import utils.GlobalParams;
			import utils.GlobalParamsLayout;
			import org.un.cava.birdeye.ravis.graphLayout.layout.ForceDirectedLayouter;
			import org.un.cava.birdeye.ravis.graphLayout.visual.IVisualGraph;
			import org.un.cava.birdeye.ravis.graphLayout.layout.ILayoutAlgorithm;

			/**
			 * We need a custom constructor to register this
			 * instance with the GlobalParams class
			 * */
			private function registerWithGlobal():void {
				/* register ourselves */
				GlobalParamsLayout.dampingControl = this;
			}
			
			/**
			 * When enabling or disabling this component, we also
			 * perform some specific tasks.
			 * Attention do completely disable interaction
			 * there is also the mouseEnabled property.
			 * 
			 * @inheritDoc
			 * */
			override public function set enabled(e:Boolean):void {
				if(e == true) {
					this.setStyle("color",0x000000);
					this.alpha=1;
				} else {
					this.setStyle("color",0xCCCCCC);
					this.alpha=0.3;
				}
				/* call superclass (Checkbox) */
				super.enabled = e;
			}
			
			/**
			 * toggles the damping feature of the ForceDirected Layouter
			 * */
			public function toggleDamping():void {
				
				var flayouter:ForceDirectedLayouter;
				var vgraph:IVisualGraph = GlobalParams.vgraph;
				
				/* check if we have a layouter at all */
				if(GlobalParams.layouter == null) {
					trace("Cannot enable damping on null layouter");
					return;
				}
				
				/* check if it is a supported layouter (currently ForceDirected only) */
				if(!GlobalParams.layouter is ForceDirectedLayouter) {
					trace("Damping is only available in ForceDirectedLayouter");
					return;
				}
				
				/* set the local layouter reference */
				flayouter = GlobalParams.layouter as ForceDirectedLayouter;
				flayouter.dampingActive = this.selected;
				
				if(vgraph != null) {
					vgraph.draw();
				} else {
					trace("Damping changed, but no valid vgraph in GlobalParams, not redrawing!");
				}
			}
			
			/**
			 * This refreshes the current value of the
			 * checkbox with the value in the layouter.
			 * */
			public function refreshDampingCheckbox():void {
				var flayouter:ForceDirectedLayouter;
				
				/* check if we have a layouter at all */
				if(GlobalParams.layouter == null) {
					trace("Cannot refresh damping from null layouter");
					return;
				}
				
				/* check if it is a supported layouter (currently ForceDirected only) */
				if(!GlobalParams.layouter is ForceDirectedLayouter) {
					trace("Damping is only available in ForceDirectedLayouter");
					return;
				}
				
				/* set the local layouter reference */
				flayouter = GlobalParams.layouter as ForceDirectedLayouter;
				this.selected = flayouter.dampingActive;
			}	
		]]>
	</mx:Script>
	
</mx:CheckBox>
