<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:coords="birdeye.vis.coords.*"
	xmlns:schema="birdeye.vis.elements.schema.*"
	xmlns:elements="birdeye.vis.elements.geometry.*"
	xmlns:scales="birdeye.vis.scales.*"
	xmlns:grid="birdeye.vis.guides.grid.*"
	xmlns:axis="birdeye.vis.guides.axis.*"
	xmlns:legend="birdeye.vis.guides.legend.*"
	width="100%" height="100%">
	
	<mx:Script>
		<![CDATA[
			import __AS3__.vec.Vector;
			import flash.utils.getTimer;
	    	import mx.collections.ArrayCollection;
	    	import com.shortybmc.data.parser.CSV;
	
			private var csv:CSV;
			private function init():void
			{
				csv = new CSV(new URLRequest('views/classics/data/Minard-Survivors.csv'));
				csv.fieldSeperator = ',';
				csv.addEventListener(Event.COMPLETE, completeHandler);
			}
			// Sample data fields: lonp,latp,survivors,direction,group
			
			[Bindable]
			private var filter:String = "";
			
			[Bindable]
			private var dp:Vector.<Object>;
			private function completeHandler(e:Event):void
			{
				filterCountryName(filter);
			}
			
			private function filterCountryName(val:String):void
			{
				filter = val;
				var tmpDP:Vector.<Object> = new Vector.<Object>();
				var tmpRow:Array;
				
				var hd:Array = csv.header;
				var pattern:RegExp = new RegExp(val, "i");
				for (var i:Number = 0; i<csv.data.length; i++)
				{
					var row:Array = csv.getRecordSet(i);
					if (row.length == hd.length)
					{
						tmpRow = [];
						
						if (row.indexOf("World") == -1 && String(row[0]).search(pattern) != -1)
						{
							for (var j:Number = 0; j<hd.length; j++)
								tmpRow[hd[j]] = (row[j] == "NA") ? 0 : row[j];
						
							tmpDP.push(tmpRow)
						}
					}
				}
				dp = tmpDP;
			}
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
    	<!-- Survivor and City Chart -->
    	<coords:Cartesian id="mainChart" width="90%" dataProvider="{dp}" height="90%">
    		<coords:scales>
 				<scales:Numeric id="lat" dataValues="{[20,40]}" dataInterval="10"/>
 				<scales:Numeric id="long" dataValues="{[45,60]}" dataInterval="10"/>
 				<scales:Linear id="size" scaleValues="{[10,100]}"/>
			</coords:scales>
			<coords:guides>
				<axis:Axis scale="{long}" scaleInterval="1" placement="bottom" colorPointer="0xFF0000" strokeColor="0xcccccc" labelColor="0xcccccc" weightPointer="3" sizeLabel="9" sizePointer="12" />
				<axis:Axis scale="{lat}" placement="left" colorPointer="0xFF0000" strokeColor="0xcccccc" labelColor="0xcccccc" weightPointer="3" sizeLabel="9" sizePointer="12" />
			</coords:guides>
    		 <coords:elements>
    		 	<elements:PathElement scale1="{long}" scale2="{lat}" dim1="lonp" dim2="latp" styleName="grad1"
    		 		sizeField="survivors" splitField="group" colorField="direction" />
    		 	<elements:PointElement scale1="{long}" scale2="{lat}" dim1="lonp" dim2="latp" labelField="city" />
			 </coords:elements>
    	</coords:Cartesian>
    	<!-- Tempurature Chart -->
    	<coords:Cartesian id="tempChart" width="90%" dataProvider="{dp}" height="90%">
    		<coords:scales>
 				<scales:Numeric id="temperature" dataValues="{[20,40]}" dataInterval="10"/>
 				<scales:Numeric id="long2" dataValues="{[45,60]}" dataInterval="10"/>
 				<scales:Linear id="size2" scaleValues="{[10,100]}"/>
			</coords:scales>
			<coords:guides>
				<axis:Axis scale="{long2}" scaleInterval="1" placement="bottom" colorPointer="0xFF0000" strokeColor="0xcccccc" labelColor="0xcccccc" weightPointer="3" sizeLabel="9" sizePointer="12" />
				<axis:Axis scale="{temperature}" placement="left" colorPointer="0xFF0000" strokeColor="0xcccccc" labelColor="0xcccccc" weightPointer="3" sizeLabel="9" sizePointer="12" />
			</coords:guides>
    		 <coords:elements>
    		 	<elements:LineElement scale1="{long2}" scale2="{temperature}" dim1="lon1" dim2="temperature" labelField="date" />
			 </coords:elements>
    	</coords:Cartesian>
    </mx:VBox>
	
	
</mx:Canvas>
