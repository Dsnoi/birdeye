<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="100%"
	horizontalAlign="center" verticalAlign="middle"
	xmlns:coords="birdeye.vis.coords.*"
	xmlns:schema="birdeye.vis.elements.schema.*"
	xmlns:elements="birdeye.vis.elements.geometry.*"
	xmlns:trans="birdeye.vis.trans.projections.*"
	xmlns:scales="birdeye.vis.scales.*"
	xmlns:guides="birdeye.vis.guides.legend.*" creationComplete="init()">
<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import birdeye.vis.data.DataItemLayout;
			import birdeye.vis.data.dictionaries.WorldCountries;
			import birdeye.vis.trans.projections.Projection;
			import mx.collections.ArrayCollection;
			import com.degrafa.core.IGraphicsFill;
			import com.degrafa.paint.RadialGradientFill;
			import com.degrafa.paint.GradientStop;
			
			[Bindable]
			public var dt:ArrayCollection = new ArrayCollection();
			public var ac:ArrayCollection = new ArrayCollection();
			public function init():void
			{
				ac = new ArrayCollection();
				var wc:WorldCountries = new WorldCountries();
				
				var countries:Array = wc.getCountriesPrefix();
				
				for (var i:Number = 0; i<countries.length; i++)
				{
					ac.addItem({
						country: wc.getCountriesName(countries[i]),
						poly: wc.getCountryPolygon(countries[i]),
						center: wc.getCountryCenter(countries[i]),
						random: Math.random() * 100000
					});
				}
				dt = ac;
			}
			
			private function dtFunc(currDatatip:Object, dataFields:Array):String
			{
				var tt:String =  currDatatip.country;
				tt += "\n Center: " + currDatatip.center;
				tt += "\n Random data: " + currDatatip.random;
				return  tt;
			}

			private function clickF(item:DataItemLayout):void
			{
				var tt:String =  item.currentItem.country;
				tt += "\n Center: " + item.currentItem.center;
				tt += "\n Random data: " + item.currentItem.random;
				Alert.show(tt);
			}

			private function colorFunction(dataValue:*, min:Number, max:Number, _size:Number):*
			{
				var val:Number = Number(dataValue);
				var fillGradients:Array;
				var alphaGradients:Array;
				var fill:com.degrafa.core.IGraphicsFill = new RadialGradientFill();

				if (val < 30000)
				{
					fillGradients = [0xE8480A, 0xE8800A]; 
					alphaGradients = [.7, .5]; 
				} else if (val < 50000)
				{
					fillGradients = [0xFF940D, 0xFFEB0D]; 
					alphaGradients = [.7, .5]; 
				} else if (val < 70000)
				{
					fillGradients = [0xFF0000, 0xFF2300]; 
					alphaGradients = [.7, .5]; 
				} else if (val < 90000)
				{
					fillGradients = [0xE80CDE, 0xE80CDE]; 
					alphaGradients = [.7, .3]; 
				} else 
				{
					fillGradients = [0x005AFF, 0x005AFF]; 
					alphaGradients = [.7, .3]; 
				} 

				var grStop:GradientStop = new GradientStop(fillGradients[0])
				grStop.alpha = alphaGradients[0];
				var g:Array = new Array();
				g.push(grStop);

				grStop = new GradientStop(fillGradients[1]);
				grStop.alpha = alphaGradients[1];
				g.push(grStop);

				RadialGradientFill(fill).gradientStops = g;
			 	return fill;
			}
		]]>
	</mx:Script>
	
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
    	<coords:Cartesian id="myMap" width="90%" height="90%" dataProvider="{dt}" showDataTips="true" dataTipFunction="dtFunc">
    		 <coords:transforms>
					<trans:Projection id="myProj" proj="Miller cylindrical" latScale="{lat}" longScale="{long}"/>
			</coords:transforms> 
			<coords:scales>
 				<scales:Numeric id="lat" dataValues="{[-90,90]}" dataInterval="20" placement="right" colorStroke="0x999999" colorPointer="0xff0000" colorLabel="0xbbbbbb"/>
 				<scales:Numeric id="long" dataValues="{[-180,180]}" dataInterval="20" placement="top" colorStroke="0x999999" colorPointer="0xff0000" colorLabel="0xbbbbbb" />
 				<scales:Numeric id="col" f="colorFunction"/>
			</coords:scales>
			<coords:elements>
    		 	<elements:PolygonElement mouseClickFunction="clickF" extendMouseEvents="true" scale1="{long}" scale2="{lat}" polyDim="poly" colorScale="{col}" colorField="random" />
			 </coords:elements>
    	</coords:Cartesian>
    	<guides:Legend dataProvider="{myMap}" direction="horizontal">
    		<guides:items>
				<guides:LegendItem text="0 to 30K" gradientColors="{[0xE8480A, 0xE8800A]}" alphaGradients="{[.7, .5]}" sizeRenderer="15" itemRenderer="birdeye.vis.guides.renderers.DiamondRenderer" />
				<guides:LegendItem text="30K to 50K" gradientColors="{[0xFF940D, 0xFFEB0D]}" alphaGradients="{[.7, .5]}" sizeRenderer="15" itemRenderer="birdeye.vis.guides.renderers.DiamondRenderer" />
				<guides:LegendItem text="50K to 70K" gradientColors="{[0xFF0000, 0xFF2300]}" alphaGradients="{[.7, .5]}" sizeRenderer="15" itemRenderer="birdeye.vis.guides.renderers.DiamondRenderer" />
				<guides:LegendItem text="70K to 90K" gradientColors="{[0xE80CDE, 0xE80CDE]}" alphaGradients="{[.7, .3]}" sizeRenderer="15" itemRenderer="birdeye.vis.guides.renderers.DiamondRenderer" />
				<guides:LegendItem text=" > 90K" gradientColors="{[0x005AFF, 0x005AFF]}" alphaGradients="{[.7, .3]}" sizeRenderer="15" itemRenderer="birdeye.vis.guides.renderers.DiamondRenderer" />
    		</guides:items>
    	</guides:Legend>
    </mx:VBox>
	
</mx:VBox>
