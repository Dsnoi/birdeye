<?xml version="1.0" encoding="utf-8"?>
<!--
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 -->
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:ui="components.ui.*"
	xmlns:ravis="org.un.cava.birdeye.ravis.graphLayout.visual.*"
	xmlns:lc="components.ui.controls.layouterControls.*"
	xmlns:vc="components.ui.controls.vgraphControls.*"
	xmlns:dp="components.ui.dataPresentation.*"
	xmlns:flexlib="http://code.google.com/p/flexlib/"
	backgroundGradientColors="[#333333,#999999]" layout="vertical"
	width="100%" height="100%"
	creationPolicy="all"
	creationComplete="init();"
	>

<mx:Style source="styles/main.css" />

	<mx:WipeLeft id="wipeLeft" duration="1000" />
	<mx:WipeRight id="wipeRight" duration="1000" />
	
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
		
	<mx:VBox width="1024" height="100%" verticalGap="10" >
	<mx:ApplicationControlBar width="100%" height="85" >
		<mx:HBox width="100%" verticalAlign="middle" paddingLeft="5" paddingRight="5" >
			<mx:Image source="{EmbeddedIcons.ravisIcon}" />
			<mx:Label text="BIRDEYE: RaVis Explorer" color="#FFFFFF" fontSize="16" />
			</mx:HBox>
	</mx:ApplicationControlBar>	
	
	<mx:HBox id="DivNavRB" width="100%" height="100%" paddingBottom="5" horizontalGap="5">
		<mx:HBox id="sideBar" width="300" height="100%" horizontalGap="0" >
			<ui:Grip id="navGrip" 
				width="17" height="100%" horizontalAlign="center"
				gripTip="Show/Hide Control Panel" />
			<mx:VBox id="NavContainerRB" horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalAlign="middle" horizontalAlign="center" verticalGap="1" horizontalGap="0" width="100%" height="100%" hideEffect="{wipeLeft}" showEffect="{wipeRight}">
				<mx:Accordion id="leftAccordion" paddingBottom="5" paddingRight="5" paddingTop="5" paddingLeft="5" horizontalScrollPolicy="off" verticalScrollPolicy="off" width="100%" height="100%" creationPolicy="all" >
					<mx:Canvas id="visibilitycnvs" label="Controls" height="100%" width="100%" paddingBottom="5" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
						<mx:VBox width="100%" height="100%" horizontalAlign="center" horizontalScrollPolicy="off" verticalScrollPolicy="off">
							<mx:Spacer height="3" />
								<flexlib:WindowShade
								id="layoutContainer"
								styleName="linkButtonWindowShade" 
  								label="Layout"
  								width="100%"
  								opened="true"
  								horizontalAlign="center"
  								paddingBottom="5"
  								>
								<mx:VBox
								width="99%"
								horizontalAlign="center"
								paddingLeft="5"
								paddingRight="5"
								paddingBottom="5"
								paddingTop="5"
								borderColor="#666666"
								borderThickness="1"
								cornerRadius="5"
								borderStyle="solid"
								backgroundColor="#CCCCCC"
								backgroundAlpha=".2" >
				
							<lc:LayoutSelector id="myLayoutSelector"  />
							<lc:HierLayoutControls id="myHierLC" />
							<lc:PhiDial id="myPhiDial" />
							<lc:ToggleDamping id="myDamping" />
							<lc:CommonLayoutControls id="myCommonLC" />
							<dp:CenteredNodeLabel id="myCenteredNodeLabel" />
							<dp:NoVisNodesLabel id="myNoVisNodeLabel" />
								
							</mx:VBox>
							</flexlib:WindowShade>
		
							<!-- Node Styles -->
							<flexlib:WindowShade
							id="nodeRenderContainer"
							styleName="linkButtonWindowShade" 
				  			label="Node Styles"
				  			width="100%"
				  			opened="true"
				  			horizontalAlign="center"
				  			paddingBottom="5"
				  			>
		
							<vc:NodeRendererSelector id="myNodeRendererSelector" />
		
							</flexlib:WindowShade>
							
							<!-- Edge Styles -->
							<flexlib:WindowShade
								id="edgeRenderContainer"
								styleName="linkButtonWindowShade" 
					  			label="Edge Styles"
					  			width="100%"
					  			opened="true"
					  			horizontalAlign="center"
					  			paddingBottom="5"
					  			>
							
							<vc:EdgeRendererSelector id="myEdgeRendererSelector" />
							
							</flexlib:WindowShade>
							
							<!-- Edge Labels -->
							<flexlib:WindowShade
								id="edgeLabelRenderContainer"
								styleName="linkButtonWindowShade" 
					  			label="Edge Label Styles"
					  			width="100%"
					  			opened="true"
					  			horizontalAlign="center"
					  			paddingBottom="5"
					  			>
								<vc:EdgeLabelControls id="myELCs" />
								</flexlib:WindowShade>
							
							<flexlib:WindowShade
								id="viewControlsContainer"
								styleName="linkButtonWindowShade" 
					  			label="View Controls"
					  			width="100%"
					  			opened="false"
					  			horizontalAlign="center"
					  			paddingBottom="5"
					  			>
					  		<mx:VBox
									width="97%"
									horizontalAlign="center"
									paddingLeft="5"
									paddingRight="5"
									paddingBottom="5"
									paddingTop="5"
									borderColor="#666666"
									borderThickness="1"
									cornerRadius="5"
									borderStyle="solid"
									backgroundColor="#CCCCCC"
									backgroundAlpha=".2" >
							<vc:DegreesOfSeparation id="myDegreeOS" />
							<vc:ScaleControls id="mySCs" />
							<vc:FullRefreshButton id="myFRB" />
							</mx:VBox>
							</flexlib:WindowShade>					
							
					<mx:Spacer height="5" />
					</mx:VBox>		
					</mx:Canvas>
				</mx:Accordion>
			</mx:VBox>		
		</mx:HBox>

		<!-- Graph Panel -->
		
		<mx:Canvas id="graphCnvs" borderStyle="solid" borderColor="#CCCCCC" backgroundColor="#FFFFFF"  width="100%" height="100%" verticalScrollPolicy="off">		
		
		<ravis:VisualGraph id="vgraph" width="100%" height="100%" 
				paddingBottom="5" left="0" right="0" top="0" bottom="0" backgroundColor="#FFFFFF" alpha="1"
				resize="GlobalControls.redrawGraphLL()"
				visibilityLimitActive="true"
				>
		</ravis:VisualGraph>
		
		</mx:Canvas>
		<!-- End of Graph Panel -->
	</mx:HBox>
</mx:VBox>
</mx:VBox>
	
	<mx:states>
       <mx:State name="showCntrlPanel">
			<mx:SetProperty target="{sideBar}" name="width" value="300" />
			<mx:SetStyle target="{DivNavRB}" name="horizontalGap" value="5" />
       </mx:State>        
		<mx:State name="hideCntrlPanel">
			<mx:SetProperty target="{sideBar}" name="width" value="17" />
			<mx:SetStyle target="{DivNavRB}" name="horizontalGap" value="0" />
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="*" toState="*">
			<mx:Resize target="{sideBar}" />
		</mx:Transition>
	</mx:transitions>

<mx:XML id="xmldata" source="data/graph.xml" />
	
	<mx:Script>
		<![CDATA[
			import org.un.cava.birdeye.ravis.graphLayout.data.Graph;
			import utils.GlobalParams;
			import utils.GlobalParamsData;
			import utils.GlobalParamsLayout;
			import utils.GlobalParamsVGraph;
			import utils.GlobalLayoutControls;
			import utils.GlobalControls;
			import components.ui.controls.vgraphControls.NodeRendererSelector;
			import components.ui.controls.vgraphControls.EdgeRendererSelector;
			import components.ui.controls.vgraphControls.DegreesOfSeparation;
			import assets.icons.EmbeddedIcons;
							
			/* Init function, initiates the HTTP
			 * request. All further initalisation is done
			 * in the event handler for the HTTP Service */
			private function init():void {
				initData();
				// myControlAccPanel.selectPane(VGAccordion.INDEX_VIS_LAYOUT);
			}
			
			/**
			 * event handler for HTTPService, does all the remaining required
			 * initialisation */
			private function initData():void {
				GlobalParams.xmlData = xmldata;
				
				// (myControlAccPanel.searchFilterComp as SeachFilterGrid).initDataGrid(xmldata.elements);
				
				
				/* init a graph object with the XML data */
				vgraph.graph = new Graph("XMLAsDocsGraph",false,xmldata,GlobalParams.xmlNames);

				GlobalParams.vgraph = vgraph;

				/* assign start root */
				vgraph.currentRootVNode = vgraph.graph.nodeByStringId("1").vnode;

				//GlobalParamsLayout.currentLayouterName = "Hierarchical";
				//GlobalLayoutControls.applyLayouter();
				
				if(GlobalParamsLayout.layoutSelectorControl != null) {
					GlobalParamsLayout.layoutSelectorControl.selectedItem = "ConcentricRadial";
					GlobalParamsLayout.layoutSelectorControl.changeLayouter();
				}
				
				if(GlobalParamsLayout.commonLayoutControls != null) {
					GlobalParamsLayout.commonLayoutControls.applyValues();
				}
				
				/* apply the values of the control objects */
				if(GlobalParamsVGraph.nodeRendererSelectorControl != null) {
					GlobalParamsVGraph.nodeRendererSelectorControl.selectedItem = "Icons";
					GlobalParamsVGraph.nodeRendererSelectorControl.changeNodeRenderer();
				}
			
				if(GlobalParamsVGraph.edgeRendererSelectorControl != null) {
					GlobalParamsVGraph.edgeRendererSelectorControl.selectedItem = "Default";
					GlobalParamsVGraph.edgeRendererSelectorControl.changeEdgeRenderer();
				}
				
				if(GlobalParamsVGraph.edgeLabelSelectorControl != null) {
					GlobalParamsVGraph.edgeLabelSelectorControl.selectedItem = "Default";
					GlobalParamsVGraph.edgeLabelSelectorControl.changeEdgeLabelRenderer();
				}
			
				if(GlobalParamsVGraph.degreeOfSeparationControl != null) {
					GlobalParamsVGraph.degreeOfSeparationControl.updateMaxVisDist();
				}
				
				/* ready to go */
				GlobalParams.vgraphInitOk = true;
				
				/* the following kicks it off .... */
				vgraph.draw();
			}
		]]>
	</mx:Script>		


</mx:Application>
