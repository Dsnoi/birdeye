<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
-->
<mx:CheckBox
	xmlns:mx="http://www.adobe.com/2006/mxml"
	selected="false"
	label="History"
	toolTip="Select will retain visibility of all nodes visited."
	creationComplete="registerComplete()"
	click="toggleShowHistory()" >
	
	<mx:Script>
		<![CDATA[
			
			import org.un.cava.birdeye.ravis.globals.GlobalParams;
			import org.un.cava.birdeye.ravis.globals.GlobalParamsVGraph;
			import org.un.cava.birdeye.ravis.graphLayout.visual.IVisualGraph;
			
			/**
			 * toggles to show previously visited root nodes
			 * (root node history)
			 * */
			public function toggleShowHistory():void {
				
				var vgraph:IVisualGraph = GlobalParams.vgraph;
				
				if(vgraph != null) {
					vgraph.showHistory = this.selected;
					vgraph.draw();
				} else {
					trace("History NOT changed, no valid vgraph in GlobalParams, not redrawing!");
				}
			}

			/**
			 * refreshes the checkbox from the current value
			 * in VGraph
			 * */
			public function refreshCheckbox():void {
				
				var vgraph:IVisualGraph = GlobalParams.vgraph;
				
				if(vgraph != null) {
					this.selected = vgraph.showHistory;
				} else {
					trace("History NOT refreshed, no valid vgraph in GlobalParams!");
				}
			}		
	
			/**
			 * register that we are complete
			 * */
			private function registerComplete():void {
				
				/* register ourselves */
				GlobalParamsVGraph.toggleShowHistoryControl = this;
			}		
		]]>
	</mx:Script>
</mx:CheckBox>
