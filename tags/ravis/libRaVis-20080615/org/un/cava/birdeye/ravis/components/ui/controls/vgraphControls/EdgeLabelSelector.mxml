<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
-->
<mx:ComboBox xmlns:mx="http://www.adobe.com/2006/mxml"
	height="20"
	width="95%"
	color="#CCCCCC"
	prompt="Select edge annotation."
	toolTip="Select the label type of edges."
	creationComplete="initData()"
	change="changeEdgeLabelRenderer()" >
	
	<mx:ArrayCollection id="elvalues">
		<mx:String>Default</mx:String>
		<mx:String>Basic</mx:String>
		<mx:String>WFB</mx:String>
	</mx:ArrayCollection>
	
	<mx:Script>	
		<![CDATA[
			import mx.utils.ObjectUtil;
			import org.un.cava.birdeye.ravis.globals.GlobalParams;
			import org.un.cava.birdeye.ravis.globals.GlobalParamsVGraph;
			import org.un.cava.birdeye.ravis.graphLayout.visual.IVisualGraph;
			import org.un.cava.birdeye.ravis.components.renderers.edgeLabels.DefaultEdgeLabelRenderer;
			import org.un.cava.birdeye.ravis.components.renderers.edgeLabels.BaseEdgeLabelRenderer;
			import org.un.cava.birdeye.ravis.components.renderers.edgeLabels.WFBEdgeLabelRenderer;
			
			/**
			 * When enabling or disabling this component, we also
			 * perform some specific tasks.
			 * Attention do completely disable interaction
			 * there is also the mouseEnabled property.
			 * 
			 * @inheritDoc
			 * */
			override public function set enabled(e:Boolean):void {
				if(e == true) {
					this.setStyle("color",0x000000);
					this.alpha=1;
				} else {
					this.setStyle("color",0xCCCCCC);
					this.alpha=0.3;
				}
				/* call superclass (ComboBox) */
				super.enabled = e;
			}

			/**
			 * Set the selected EdgeLabelRenderer.
			 * */
			public function changeEdgeLabelRenderer():void {
				
				var elr:String;
				var vgraph:IVisualGraph = GlobalParams.vgraph;
				
				/* get the currently selected EdgeLabelRenderer */
				elr = this.selectedItem as String;
				
				if(vgraph != null) {
					switch(elr) {
						case "Default":
							vgraph.edgeLabelRenderer = new ClassFactory(DefaultEdgeLabelRenderer);
							break;
						case "Basic":
							vgraph.edgeLabelRenderer = new ClassFactory(BaseEdgeLabelRenderer);
							break;
						case "WFB":
							vgraph.edgeLabelRenderer = new ClassFactory(WFBEdgeLabelRenderer);
							break;
						default:
							trace("Illegal EdgeLabelRenderer selected:"+elr);
							vgraph.edgeLabelRenderer = new ClassFactory(DefaultEdgeLabelRenderer);
							break;
					}
					/* XXX WE NEED A FULL REFRESH HERE TO CHANGE OUT ALL THE CREATED RENDERER OBJECTS
					 * TO IMPLEMENT */
					vgraph.draw();
				} else {
					trace("EdgeLabelRenderer NOT CHANGED, no valid vgraph in GlobalParams, not redrawing!");
				}
			}
			
			/**
			 * Refresh the selector with the current EdgeLabelRenderer.
			 * */
			public function refreshSelector():void {
				

				var vgraph:IVisualGraph = GlobalParams.vgraph;
				
				if(vgraph != null) {
					switch(ObjectUtil.getClassInfo(vgraph.edgeLabelRenderer).name) {
						case "DefaultEdgeLabelRenderer":
							this.selectedIndex = 0;
							break;
						case "BaseEdgeLabelRenderer":
							this.selectedIndex = 1;
							break;
						case "WFBEdgeLabelRenderer":
							this.selectedIndex = 2;
							break;
						default:
							trace("Illegal ELR class received:"+
								ObjectUtil.getClassInfo(vgraph.edgeLabelRenderer).name);
							break;
					}
				} else {
					trace("EdgeLabelRenderer NOT refreshed, no valid vgraph in GlobalParams!");
				}
			}
			
			/**
			 * initialise the selection data.
			 * It is a bit unclear, why this seems to be necessary.
			 * */
			private function initData():void {
				this.dataProvider = elvalues;
				/* register ourselves */
				GlobalParamsVGraph.edgeLabelSelectorControl = this;
			}
		]]>
	</mx:Script>
</mx:ComboBox>
